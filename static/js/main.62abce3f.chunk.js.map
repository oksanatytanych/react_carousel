{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","params","imgLength","changeCarousel","className","type","onClick","firstImg","step","disabled","infinite","style","width","frameSize","itemWidth","map","image","src","url","alt","id","toString","height","animationDuration","visibleImages","imagesFromServer","length","baseParams","App","useState","setParams","filterParams","preparedImages","firstImgIndex","findIndex","img","slice","concat","getPreparedImages","key","value","validValue","previousParams","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.62abce3f.chunk.js","sourcesContent":["import { Image } from '../types/Image';\nimport { Params } from '../types/Params';\n\nimport './Carousel.scss';\n\ntype Props = {\n  images: Image[];\n  params: Params;\n  imgLength: number;\n  changeCarousel: (key: string, value: number | boolean) => void;\n};\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  params,\n  imgLength,\n  changeCarousel,\n}) => {\n  const changeInfinite = () => {\n    changeCarousel('infinite', !params.infinite);\n  };\n\n  const incStep = () => changeCarousel('step', params.step + 1);\n  const decrStep = () => changeCarousel('step', params.step - 1);\n\n  const incFrameSize = () => changeCarousel('frameSize', params.frameSize + 1);\n  const decrFrameSize = () => changeCarousel('frameSize', params.frameSize - 1);\n\n  const incImgSize = () => changeCarousel('itemWidth', params.itemWidth + 10);\n  const decrImgSize = () => changeCarousel('itemWidth', params.itemWidth - 10);\n\n  const incAanimationDuration = () => {\n    changeCarousel('animationDuration', params.animationDuration + 500);\n  };\n\n  const decrAanimationDuration = () => {\n    changeCarousel('animationDuration', params.animationDuration - 500);\n  };\n\n  const nextItem = () => {\n    changeCarousel('firstImg', params.firstImg + params.step);\n  };\n\n  const prevItem = () => {\n    changeCarousel('firstImg', params.firstImg - params.step);\n  };\n\n  const prevButtonDisabled = () => {\n    return !params.infinite\n      && (params.firstImg - params.step <= 0);\n  };\n\n  const nextButtonDisabled = () => {\n    return !params.infinite\n      && (params.firstImg + params.step > imgLength);\n  };\n\n  return (\n    <div className=\"Carousel\">\n      <div className=\"Carousel__slider\">\n        <button\n          type=\"button\"\n          className=\"Carousel__button\"\n          onClick={prevItem}\n          disabled={prevButtonDisabled()}\n        >\n          Prev\n        </button>\n\n        <div\n          className=\"Carousel__container\"\n          style={{ width: `${params.frameSize * params.itemWidth}px` }}\n        >\n          <ul\n            className=\"Carousel__list\"\n          >\n            {images.map(image => (\n              <li key={image.id}>\n                <img\n                  src={image.url}\n                  alt={image.id.toString()}\n                  style={{\n                    width: params.itemWidth,\n                    height: params.itemWidth,\n\n                  }}\n                />\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        <button\n          type=\"button\"\n          className=\"Carousel__button\"\n          data-cy=\"next\"\n          onClick={nextItem}\n          disabled={nextButtonDisabled()}\n        >\n          Next\n        </button>\n      </div>\n\n      <div className=\"Carousel__props Props\">\n        <div className=\"Props__container\">\n          {'Images size in pixels: '}\n          <button\n            type=\"button\"\n            className=\"Props__button\"\n            onClick={decrImgSize}\n            disabled={params.itemWidth <= 50}\n          >\n            -\n          </button>\n\n          <span>{` ${params.itemWidth}x${params.itemWidth} `}</span>\n\n          <button\n            type=\"button\"\n            className=\"Props__button\"\n            onClick={incImgSize}\n            disabled={params.itemWidth >= 260}\n          >\n            +\n          </button>\n        </div>\n\n        <div className=\"Props__container\">\n          {'Number of images displayed at the same time: '}\n          <button\n            type=\"button\"\n            className=\"Props__button\"\n            onClick={decrFrameSize}\n            disabled={params.frameSize === 1}\n          >\n            -\n          </button>\n\n          <span>{` ${params.frameSize} `}</span>\n          <button\n            type=\"button\"\n            className=\"Props__button\"\n            onClick={incFrameSize}\n            disabled={params.frameSize === imgLength}\n          >\n            +\n          </button>\n        </div>\n\n        <div className=\"Props__container\">\n          <span>Number of images scrolled per click: </span>\n\n          <button\n            type=\"button\"\n            className=\"Props__button\"\n            onClick={decrStep}\n            disabled={params.step === 1}\n          >\n            -\n          </button>\n\n          <span>{` ${params.step} `}</span>\n\n          <button\n            type=\"button\"\n            className=\"Props__button\"\n            onClick={incStep}\n            disabled={params.step >= imgLength - 1}\n          >\n            +\n          </button>\n        </div>\n\n        <div className=\"Props__container\">\n          <span>Itime in ms to show the new portion of images: </span>\n\n          <button\n            type=\"button\"\n            className=\"Props__button\"\n            onClick={decrAanimationDuration}\n            disabled={params.animationDuration <= 500}\n          >\n            -\n          </button>\n\n          <span>{` ${params.animationDuration} `}</span>\n\n          <button\n            type=\"button\"\n            className=\"Props__button\"\n            onClick={incAanimationDuration}\n            disabled={params.animationDuration >= 4000}\n          >\n            +\n          </button>\n        </div>\n\n        <div className=\"Props__container\">\n          <span>To do the carousel cyclic </span>\n          <button\n            type=\"button\"\n            className=\"Props__button\"\n            onClick={changeInfinite}\n          >\n            {params.infinite ? '✓' : '✘'}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import { useState } from 'react';\nimport imagesFromServer from './api/images.json';\nimport { Image } from './types/Image';\nimport { Params } from './types/Params';\nimport Carousel from './components/Carousel';\nimport './App.scss';\n\nlet visibleImages = [];\nconst imgLength = imagesFromServer.length;\nconst baseParams = {\n  firstImg: 1,\n  step: 3,\n  frameSize: 3,\n  itemWidth: 130,\n  animationDuration: 1000,\n  infinite: false,\n};\n\nfunction getPreparedImages(images: Image[], filterParams: Params): Image[] {\n  let preparedImages = [...images];\n  let firstImgIndex = preparedImages\n    .findIndex(img => img.id === filterParams.firstImg);\n\n  if (filterParams.infinite) {\n    preparedImages = preparedImages.slice(firstImgIndex)\n      .concat(preparedImages.slice(0, firstImgIndex));\n\n    firstImgIndex = preparedImages\n      .findIndex(img => img.id === filterParams.firstImg);\n  }\n\n  preparedImages = preparedImages\n    .slice(firstImgIndex, firstImgIndex + filterParams.frameSize);\n\n  return preparedImages;\n}\n\nexport const App = () => {\n  const [params, setParams] = useState(baseParams);\n\n  const changeParams = (key: string, value: number | boolean) => {\n    let validValue = value;\n\n    if (key === 'firstImg' && typeof value === 'number') {\n      if (value > imgLength) {\n        validValue = value - imgLength;\n      }\n\n      if (value <= 0) {\n        validValue = value + imgLength;\n      }\n    }\n\n    setParams(previousParams => {\n      return { ...previousParams, [key]: validValue };\n    });\n  };\n\n  visibleImages = getPreparedImages(imagesFromServer, params);\n\n  return (\n    <div className=\"App\">\n      <h1 data-cy=\"title\">\n        {`Carousel with ${visibleImages.length} images`}\n      </h1>\n\n      <Carousel\n        images={visibleImages}\n        params={params}\n        imgLength={imgLength}\n        changeCarousel={changeParams}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n// eslint-disable-next-line import/no-named-as-default\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}