{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","params","changeCarousel","useState","firstVisibleImg","setFirstVisibleImg","className","type","onClick","nextVisibleImg","step","disabled","style","width","itemWidth","frameSize","transition","animationDuration","map","image","transform","src","url","alt","id","toString","height","length","infinite","htmlFor","name","min","max","value","onChange","e","target","defaultChecked","checked","baseParams","firstImg","App","setParams","img","filterParams","firstImgIndex","findIndex","el","slice","getPreparedImages","imagesFromServer","key","validValue","previousParams","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ef6a0111.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\nimport { Image } from '../types/Image';\nimport { Params } from '../types/Params';\n\ntype Props = {\n  images: Image[];\n  params: Params;\n  changeCarousel: (key: string, value: number | boolean) => void\n};\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  params,\n  changeCarousel,\n}) => {\n  const [firstVisibleImg, setFirstVisibleImg] = useState(1);\n\n  const scrolRight = () => {\n    let nextVisibleImg = firstVisibleImg + params.step;\n\n    if ((nextVisibleImg + params.frameSize) >= images.length) {\n      nextVisibleImg = images.length - params.frameSize + 1;\n    }\n\n    if (params.infinite && (firstVisibleImg === nextVisibleImg)) {\n      nextVisibleImg = 1;\n    }\n\n    setFirstVisibleImg(nextVisibleImg);\n  };\n\n  const scrolLeft = () => {\n    let nextVisibleImg = firstVisibleImg - params.step;\n\n    if (nextVisibleImg < 1) {\n      nextVisibleImg = 1;\n    }\n\n    setFirstVisibleImg(nextVisibleImg);\n  };\n\n  return (\n    <div className=\"Carousel\">\n      <div className=\"Carousel__container\">\n        <button\n          type=\"button\"\n          className=\"Carousel__button\"\n          onClick={scrolLeft}\n          disabled={firstVisibleImg === 1}\n        >\n          Prev\n        </button>\n\n        <div\n          style={{\n            width: `${params.itemWidth * params.frameSize}px`,\n            transition: `${params.animationDuration}ms`,\n          }}\n        >\n          <ul className=\"Carousel__list\">\n            {images.map(image => (\n              <li\n                key={image.id}\n                style={{\n                  transform: `translateX(${-params.itemWidth * (firstVisibleImg - 1)}px)`,\n                  transition: `${params.animationDuration}ms`,\n                }}\n              >\n                <img\n                  src={image.url}\n                  alt={image.id.toString()}\n                  style={{\n                    width: `${params.itemWidth}px`,\n                    height: `${params.itemWidth}px`,\n                  }}\n                />\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        <button\n          type=\"button\"\n          data-cy=\"next\"\n          className=\"Carousel__button\"\n          onClick={scrolRight}\n          disabled={(!params.infinite\n            && (firstVisibleImg === (images.length - params.frameSize + 1)))\n            || params.frameSize === images.length}\n        >\n          Next\n        </button>\n      </div>\n\n      <div className=\"Carousel__props Props\">\n        <div className=\"Props__container\">\n          <label htmlFor=\"itemWidth\">Item size: </label>\n\n          <input\n            type=\"range\"\n            id=\"itemWidth\"\n            name=\"itemWidth\"\n            className=\"Props__range\"\n            min={50}\n            max={300}\n            step={1}\n            value={params.itemWidth}\n            onChange={(e) => changeCarousel('itemWidth', +e.target.value)}\n          />\n\n          <span>{`${params.itemWidth}x${params.itemWidth} px`}</span>\n        </div>\n\n        <div className=\"Props__container\">\n          <label htmlFor=\"step\">\n            {'Number of images scrolled per click: '}\n          </label>\n\n          <input\n            type=\"number\"\n            id=\"step\"\n            name=\"step\"\n            className=\"Props__number\"\n            min={1}\n            max={images.length - 1}\n            step={1}\n            value={params.step}\n            onChange={(e) => changeCarousel('step', +e.target.value)}\n          />\n        </div>\n\n        <div className=\"Props__container\">\n          <label htmlFor=\"frameSize\">\n            {'Number of images displayed at the same time: '}\n          </label>\n\n          <input\n            type=\"number\"\n            id=\"frameSize\"\n            name=\"frameSize\"\n            className=\"Props__number\"\n            min={1}\n            max={images.length}\n            step={1}\n            value={params.frameSize}\n            onChange={(e) => changeCarousel('frameSize', +e.target.value)}\n          />\n        </div>\n\n        <div className=\"Props__container\">\n          <label htmlFor=\"animationDuration\">\n            {'Itime in ms to show the new portion of images: '}\n          </label>\n\n          <input\n            type=\"range\"\n            id=\"animationDuration\"\n            name=\"animationDuration\"\n            className=\"Props__range\"\n            min={300}\n            max={3000}\n            step={100}\n            value={params.animationDuration}\n            onChange={\n              (e) => changeCarousel('animationDuration', +e.target.value)\n            }\n          />\n          <span>{`${params.animationDuration} ms`}</span>\n        </div>\n\n        <div className=\"Props__container\">\n          <label htmlFor=\"infinite\">\n            {'To do the carousel cyclic '}\n          </label>\n\n          <input\n            type=\"checkbox\"\n            id=\"infinite\"\n            name=\"infinite\"\n            className=\"Props__checkbox\"\n            min={300}\n            max={3000}\n            step={100}\n            defaultChecked={params.infinite}\n            onChange={\n              (e) => changeCarousel('infinite', e.target.checked)\n            }\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import { useState } from 'react';\nimport imagesFromServer from './api/images.json';\nimport './App.scss';\nimport Carousel from './components/Carousel';\nimport { Image } from './types/Image';\nimport { Params } from './types/Params';\n\nconst baseParams = {\n  firstImg: 1,\n  step: 3,\n  frameSize: 3,\n  itemWidth: 130,\n  animationDuration: 1000,\n  infinite: false,\n};\n\nfunction getPreparedImages(img: Image[], filterParams: Params): Image[] {\n  const firstImgIndex = img.findIndex(el => el.id === filterParams.firstImg);\n\n  return [...img].slice(firstImgIndex);\n}\n\nexport const App = () => {\n  const [params, setParams] = useState(baseParams);\n  const images = getPreparedImages(imagesFromServer, params);\n\n  const changeParams = (key: string, value: number | boolean) => {\n    const validValue = value;\n\n    setParams(previousParams => {\n      return { ...previousParams, [key]: validValue };\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 data-cy=\"title\">{`Carousel with ${images.length} images`}</h1>\n\n      <Carousel\n        images={images}\n        params={params}\n        changeCarousel={changeParams}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n// eslint-disable-next-line import/no-named-as-default\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}